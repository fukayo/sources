name: Release
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**.spec.js'
      - '.idea'
      - '.gitignore'
      - '.github/**'
      - '!.github/workflows/release.yml'
      - '!.github/workflows/beta.yml'

permissions: write-all

defaults:
  run:
    shell: 'bash'

jobs:
  publish:
    runs-on: ubuntu-latest
    outputs:
      release-note: ${{ steps.release-note.outputs.release-note }}
      release-note-json: ${{ steps.release-note.outputs.release-note-json }}
      version: ${{ steps.version.outputs.build-version }}
      draft-id: ${{ steps.draft-create.outputs.id }}
      has-updated: ${{ steps.version-updated.outputs.has-updated }}
    steps:
      - name: package.json version check
        uses: JiPaix/package-json-updated-action@v1.0.5
        id: version-updated
        with:
          path: package.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        if: steps.version-updated.outputs.has-updated == 'true'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup NodeJS
        if: steps.version-updated.outputs.has-updated == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Get version
        if: steps.version-updated.outputs.has-updated == 'true'
        id: version
        run: echo "build-version=${{steps.version-updated.outputs.current-package-version}}" >> $GITHUB_OUTPUT

      - name: Get last git tag
        if: steps.version-updated.outputs.has-updated == 'true'
        id: tag
        run: echo "last-tag=$(git describe --tags --abbrev=0 --exclude "*beta" ${{github.ref}})" >> $GITHUB_OUTPUT

      - name: Generate release notes
        if: steps.version-updated.outputs.has-updated == 'true'
        uses: ./.github/actions/release-notes
        id: release-note
        with:
          from: ${{ steps.tag.outputs.last-tag }}
          to: ${{ github.ref }}
          include-commit-body: true
          include-abbreviated-commit: true

      - name: Delete outdated drafts
        if: steps.version-updated.outputs.has-updated == 'true'
        uses: hugo19941994/delete-draft-releases@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        if: steps.version-updated.outputs.has-updated == 'true'
        run: |
          npm ci
          npm run build
          npm run start -- v${{ steps.version.outputs.build-version }}

      - name: Create Release
        if: steps.version-updated.outputs.has-updated == 'true'
        uses: ncipollo/release-action@v1.12.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          artifacts: "dist/*.js,dist/*.json"
          tag: v${{ steps.version.outputs.build-version }}
          name: v${{ steps.version.outputs.build-version }}
          body: ${{ steps.release-note.outputs.release-note }}

      - name: Fast foward
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"
          git checkout beta
          git pull origin main
          git push origin beta